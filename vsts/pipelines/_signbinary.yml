steps:
- powershell: 'Write-Host "##vso[task.setvariable variable=SignType]real"'
  displayName: 'Set sign binary variable'
  condition: eq(variables['Build.Reason'], 'Schedule')

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.6.2'
  inputs:
    versionSpec: 4.6.2

- task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
  displayName: 'Install Signing Plugin'
  inputs:
    signType: '$(SignType)'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: Oryx.sln

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish linux'
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
     src\BuildScriptGeneratorCLI\BuildScriptGeneratorCli.csproj
    arguments: '-c $(BuildConfiguration) -r linux-x64'
    zipAfterPublish: true
    modifyOutputPath: false

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection - OSS Compliance'
  inputs:
    ignoreDirectories: '$(Build.SourcesDirectory)/tests'

- task: VSBuild@1
  displayName: 'Sign Oryx Binaries'
  inputs:
    solution: 'src/BuildScriptGeneratorCli/Oryx_sign.signproj'
    msbuildArgs: '/t:SignFiles /p:RuntimeIdentifier=linux-x64 /p:MicroBuild_SigningEnabled=true'
    configuration: '$(BuildConfiguration)'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Schedule'))

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/symbols'
  inputs:
    SourceFolder: 'src/BuildScriptGeneratorCli/bin/$(BuildConfiguration)/linux-x64/publish'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/symbols'
    CleanTargetFolder: true

- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'