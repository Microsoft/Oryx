//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Oryx.BuildScriptGenerator.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Labels {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Labels() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Oryx.BuildScriptGenerator.Resources.Labels", typeof(Labels).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity in selecting a project to build. Found multiple projects: &apos;{0}&apos;. To fix this, use the environment variable &apos;{1}&apos; to specify the relative path to the project to be deployed..
        /// </summary>
        internal static string DotNetCoreAmbiguityInSelectingProjectFile {
            get {
                return ResourceManager.GetString("DotNetCoreAmbiguityInSelectingProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the project file &apos;{0}&apos; specified in settings. Make sure the path to the project file is relative to the root of the repo. For example: PROJECT=src/Dashboard/Dashboard.csproj.
        /// </summary>
        internal static string DotNetCoreCouldNotFindProjectFileToBuild {
            get {
                return ResourceManager.GetString("DotNetCoreCouldNotFindProjectFileToBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerating repo to find any files with extension &apos;{0}&apos;....
        /// </summary>
        internal static string DotNetCoreEnumeratingFilesInRepo {
            get {
                return ResourceManager.GetString("DotNetCoreEnumeratingFilesInRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &apos;{0}&apos;, specified in package.json&apos;s {1},\nis known to have been superseded by &apos;{2}&apos;. Consider switching over..
        /// </summary>
        internal static string NodeDependencyCheckerMessageFormat {
            get {
                return ResourceManager.GetString("NodeDependencyCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The script &apos;{0}&apos;, defined in package.json, seems to be trying to install packages globally. This could have unexpected results, as global packages might not be available in the runtime container..
        /// </summary>
        internal static string NodePackageGlobalInstallMessageFormat {
            get {
                return ResourceManager.GetString("NodePackageGlobalInstallMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid options: &apos;virtualenv_name&apos; and &apos;packagedir&apos; cannot be used at the same time. Passing &apos;packagedir&apos; means that no virtual environment will be created, and instead all the packages will be downloaded to the given directory. If &apos;virtualenv_name&apos; is given, the virtual environment will be created and the packages downloaded there..
        /// </summary>
        internal static string PythonBuildCantHaveVirtualEnvAndTargetPackageDirErrorMessage {
            get {
                return ResourceManager.GetString("PythonBuildCantHaveVirtualEnvAndTargetPackageDirErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An outdated version of {0} was detected ({1}). Consider updating.\nVersions supported by Oryx: {2}.
        /// </summary>
        internal static string ToolVersionCheckerMessageFormat {
            get {
                return ResourceManager.GetString("ToolVersionCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not detect the language from repo..
        /// </summary>
        internal static string UnableToDetectPlatformMessage {
            get {
                return ResourceManager.GetString("UnableToDetectPlatformMessage", resourceCulture);
            }
        }
    }
}
